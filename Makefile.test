# © 2025 Casey Koons All rights reserved
# Argo Test Targets
# Test target definitions, test harnesses, validation

# Quick tests - fast, no external dependencies
test-quick: test-registry test-memory test-lifecycle test-providers test-messaging test-workflow test-integration test-persistence test-workflow-loader test-session test-env test-thread-safety test-shutdown-signals test-concurrent-workflows test-env-precedence test-shared-services test-workflow-registry test-http test-json test-api-common test-claude-providers test-memory-stress test-arc
	@echo ""
	@echo "=========================================="
	@echo "Quick Tests Complete"
	@echo "=========================================="

# All safe tests - includes API availability checks but no costs
test-api-live: test-providers test-registry test-memory test-lifecycle test-api
	@echo ""
	@echo "=========================================="
	@echo "All Tests Complete (including live APIs)"
	@echo "WARNING: API tests may incur costs"
	@echo "=========================================="

# Individual test targets
test-ci-providers: $(TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "Old CI Provider Tests (deprecated)"
	@echo "=========================================="
	-@./$(TEST_TARGET)

test-registry: $(REGISTRY_TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "Registry Tests"
	@echo "=========================================="
	@./$(REGISTRY_TEST_TARGET)

test-memory: $(MEMORY_TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "Memory Manager Tests"
	@echo "=========================================="
	@./$(MEMORY_TEST_TARGET)

test-lifecycle: $(LIFECYCLE_TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "Lifecycle Manager Tests"
	@echo "=========================================="
	@./$(LIFECYCLE_TEST_TARGET)

test-providers: $(PROVIDER_TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "Provider System Tests"
	@echo "=========================================="
	@./$(PROVIDER_TEST_TARGET)

test-messaging: $(MESSAGING_TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "Messaging System Tests"
	@echo "=========================================="
	@./$(MESSAGING_TEST_TARGET)

test-workflow: $(WORKFLOW_TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "Workflow Controller Tests"
	@echo "=========================================="
	@./$(WORKFLOW_TEST_TARGET)

test-integration: $(INTEGRATION_TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "Integration Tests"
	@echo "=========================================="
	@./$(INTEGRATION_TEST_TARGET)

test-persistence: $(PERSISTENCE_TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "Persistence Tests"
	@echo "=========================================="
	@./$(PERSISTENCE_TEST_TARGET)

test-workflow-loader: $(WORKFLOW_LOADER_TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "Workflow Loader Tests"
	@echo "=========================================="
	@./$(WORKFLOW_LOADER_TEST_TARGET)

test-session: $(SESSION_TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "Session Manager Tests"
	@echo "=========================================="
	@./$(SESSION_TEST_TARGET)

test-env: $(ENV_TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "Environment Utilities Tests"
	@echo "=========================================="
	@./$(ENV_TEST_TARGET)

test-thread-safety: $(THREAD_SAFETY_TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "Thread Safety Tests"
	@echo "=========================================="
	@./$(THREAD_SAFETY_TEST_TARGET)

test-shutdown-signals: $(SHUTDOWN_SIGNALS_TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "Shutdown Signal Tests"
	@echo "=========================================="
	@./$(SHUTDOWN_SIGNALS_TEST_TARGET)

test-concurrent-workflows: $(CONCURRENT_WORKFLOWS_TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "Concurrent Workflow Tests"
	@echo "=========================================="
	@./$(CONCURRENT_WORKFLOWS_TEST_TARGET)

test-env-precedence: $(ENV_PRECEDENCE_TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "Environment Precedence Tests"
	@echo "=========================================="
	@./$(ENV_PRECEDENCE_TEST_TARGET)

test-shared-services: $(SHARED_SERVICES_TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "Shared Services Tests"
	@echo "=========================================="
	@./$(SHARED_SERVICES_TEST_TARGET)

test-workflow-registry: $(WORKFLOW_REGISTRY_TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "Workflow Registry Tests"
	@echo "=========================================="
	@./$(WORKFLOW_REGISTRY_TEST_TARGET)

test-http: $(HTTP_TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "HTTP Operations Tests"
	@echo "=========================================="
	@./$(HTTP_TEST_TARGET)

test-json: $(JSON_TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "JSON Parsing Tests"
	@echo "=========================================="
	@./$(JSON_TEST_TARGET)

test-api-common: $(API_COMMON_TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "API Common Utilities Tests"
	@echo "=========================================="
	@./$(API_COMMON_TEST_TARGET)

test-claude-providers: $(CLAUDE_PROVIDERS_TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "Claude Provider Tests"
	@echo "=========================================="
	@./$(CLAUDE_PROVIDERS_TEST_TARGET)

test-memory-stress: $(MEMORY_STRESS_TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "Memory Stress Tests"
	@echo "=========================================="
	@./$(MEMORY_STRESS_TEST_TARGET)

test-arc: arc
	@$(MAKE) -C arc test-arc

test-arc-workflow: arc
	@$(MAKE) -C arc test-arc-workflow

test-arc-background: arc
	@$(MAKE) -C arc test-arc-background

test-arc-full: arc
	@$(MAKE) -C arc test-arc-full

test-arc-all: arc
	@$(MAKE) -C arc test-arc-all

test-api: $(API_TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "API Provider Tests"
	@echo "NOTE: Requires valid API keys"
	@echo "=========================================="
	@./$(API_TEST_TARGET)

# Explicit only - costs real money
test-api-calls: $(API_CALL_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "WARNING: This will make actual API calls"
	@echo "         and incur costs!"
	@echo "=========================================="
	@./$(API_CALL_TARGET)

# Memory leak detection with valgrind
test-valgrind: $(WORKFLOW_TEST_TARGET) $(THREAD_SAFETY_TEST_TARGET) $(MEMORY_TEST_TARGET)
	@echo ""
	@echo "=========================================="
	@echo "Memory Leak Detection (Valgrind)"
	@echo "=========================================="
	@which valgrind > /dev/null 2>&1 || (echo "ERROR: valgrind not installed"; exit 1)
	@echo "Testing workflow controller..."
	@valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes \
		--error-exitcode=1 --suppressions=/dev/null \
		./$(WORKFLOW_TEST_TARGET) > /dev/null 2>&1 && echo "  ✓ No leaks in workflow" || echo "  ✗ Memory leaks detected"
	@echo "Testing thread safety..."
	@valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes \
		--error-exitcode=1 --suppressions=/dev/null \
		./$(THREAD_SAFETY_TEST_TARGET) > /dev/null 2>&1 && echo "  ✓ No leaks in thread safety" || echo "  ✗ Memory leaks detected"
	@echo "Testing memory manager..."
	@valgrind --leak-check=full --show-leak-kinds=all --track-origins=yes \
		--error-exitcode=1 --suppressions=/dev/null \
		./$(MEMORY_TEST_TARGET) > /dev/null 2>&1 && echo "  ✓ No leaks in memory manager" || echo "  ✗ Memory leaks detected"
	@echo ""
	@echo "=========================================="
	@echo "Valgrind Complete - See above for results"
	@echo "=========================================="

# Build with AddressSanitizer (catches memory errors at runtime)
build-asan:
	@echo "Building with AddressSanitizer..."
	@$(MAKE) clean
	@$(MAKE) CFLAGS="-Wall -Werror -Wextra -std=c11 -g -I./include -fsanitize=address -fno-omit-frame-pointer" \
		LDFLAGS="-lpthread -fsanitize=address"

# Run tests with AddressSanitizer
test-asan: build-asan
	@echo ""
	@echo "=========================================="
	@echo "AddressSanitizer Tests"
	@echo "=========================================="
	@echo "Running workflow tests..."
	@./$(WORKFLOW_TEST_TARGET) && echo "  ✓ Workflow tests passed" || echo "  ✗ Workflow tests failed"
	@echo "Running thread safety tests..."
	@./$(THREAD_SAFETY_TEST_TARGET) && echo "  ✓ Thread safety tests passed" || echo "  ✗ Thread safety tests failed"
	@echo ""
	@echo "=========================================="
	@echo "ASAN Complete - Rebuild normally with 'make'"
	@echo "=========================================="

test-asan-full: build-asan
	@echo ""
	@echo "=========================================="
	@echo "Full AddressSanitizer Test Suite"
	@echo "=========================================="
	@./$(WORKFLOW_TEST_TARGET) && echo "  ✓ Workflow" || echo "  ✗ Workflow"
	@./$(INTEGRATION_TEST_TARGET) && echo "  ✓ Integration" || echo "  ✗ Integration"
	@./$(LIFECYCLE_TEST_TARGET) && echo "  ✓ Lifecycle" || echo "  ✗ Lifecycle"
	@./$(MEMORY_TEST_TARGET) && echo "  ✓ Memory" || echo "  ✗ Memory"
	@./$(THREAD_SAFETY_TEST_TARGET) && echo "  ✓ Thread Safety" || echo "  ✗ Thread Safety"
	@./$(SESSION_TEST_TARGET) && echo "  ✓ Session" || echo "  ✗ Session"
	@./$(PERSISTENCE_TEST_TARGET) && echo "  ✓ Persistence" || echo "  ✗ Persistence"
	@echo ""
	@echo "=========================================="
	@echo "Full ASAN Complete - Rebuild normally with 'make'"
	@echo "=========================================="

# Test harness targets
harness-init-basic: $(HARNESS_INIT_BASIC)
	@./$(HARNESS_INIT_BASIC)

harness-env-inspect: $(HARNESS_ENV_INSPECT)
	@./$(HARNESS_ENV_INSPECT)

harness-reinit: $(HARNESS_REINIT)
	@./$(HARNESS_REINIT)

harness-init-error: $(HARNESS_INIT_ERROR)
	@./$(HARNESS_INIT_ERROR)

harness-socket: $(HARNESS_SOCKET)
	@./$(HARNESS_SOCKET)

harness-terminal: $(HARNESS_TERMINAL)
	@./$(HARNESS_TERMINAL)

harness-workflow-context: $(HARNESS_WORKFLOW_CONTEXT)
	@./$(HARNESS_WORKFLOW_CONTEXT)

harness-control-flow: $(HARNESS_CONTROL_FLOW)
	@./$(HARNESS_CONTROL_FLOW)

harness-ci-interactive: $(HARNESS_CI_INTERACTIVE)
	@./$(HARNESS_CI_INTERACTIVE)

harness-loop: $(HARNESS_LOOP)
	@./$(HARNESS_LOOP)

harness-persona: $(HARNESS_PERSONA)
	@./$(HARNESS_PERSONA)

harness-workflow-chain: $(HARNESS_WORKFLOW_CHAIN)
	@./$(HARNESS_WORKFLOW_CHAIN)

# Run all harnesses
test-harnesses: harnesses
	@echo ""
	@echo "=========================================="
	@echo "Running All Test Harnesses"
	@echo "=========================================="
	@$(MAKE) harness-init-basic
	@$(MAKE) harness-reinit
	@$(MAKE) harness-socket
	@$(MAKE) harness-workflow-context
	@echo ""
	@echo "=========================================="
	@echo "Harness Tests Complete"
	@echo "=========================================="

# Run all local tests: unit tests + harnesses (no API costs)
test-all: test-quick test-harnesses
	@echo ""
	@echo "=========================================="
	@echo "ALL LOCAL TESTS COMPLETE"
	@echo "  Unit Tests: PASSED (95 tests)"
	@echo "  Harnesses:  PASSED (4 tests)"
	@echo "=========================================="
	@echo ""
	@echo "To run tests with live API calls (costs money):"
	@echo "  make test-api-live"
	@echo ""

# Component tests
test-ui: ui
	@$(MAKE) -C ui/argo-term test

test-all-components: test test-arc test-ui
