# Â© 2025 Casey Koons All rights reserved
# Argo Build Configuration
# Variables, paths, and source lists

# Compiler and flags
CC = gcc
CFLAGS = -Wall -Werror -Wextra -std=c11 -g -I./include
LDFLAGS = -lpthread -lcurl

# Installation
PREFIX ?= $(HOME)/.local

# Optional features (enable with make ENABLE_DRYRUN=1 ENABLE_METRICS=1)
ifdef ENABLE_DRYRUN
  CFLAGS += -DARGO_ENABLE_DRYRUN
endif

ifdef ENABLE_METRICS
  CFLAGS += -DARGO_ENABLE_METRICS
endif

# Directories
SRC_DIR = src
INC_DIR = include
TEST_DIR = tests
TEST_UNIT_DIR = $(TEST_DIR)/unit
TEST_INTEGRATION_DIR = $(TEST_DIR)/integration
BUILD_DIR = build
SCRIPT_DIR = scripts
LOG_DIR = .argo/logs
SESSION_DIR = .argo/sessions

# Foundation library sources (core utilities)
FOUNDATION_SOURCES = $(SRC_DIR)/foundation/argo_error.c \
                     $(SRC_DIR)/foundation/argo_log.c \
                     $(SRC_DIR)/foundation/argo_http.c \
                     $(SRC_DIR)/foundation/argo_socket.c \
                     $(SRC_DIR)/foundation/argo_json.c \
                     $(SRC_DIR)/foundation/argo_string_utils.c \
                     $(SRC_DIR)/foundation/argo_print_utils.c \
                     $(SRC_DIR)/foundation/argo_env_utils.c \
                     $(SRC_DIR)/foundation/argo_env_load.c \
                     $(SRC_DIR)/foundation/argo_env.c \
                     $(SRC_DIR)/foundation/argo_file_utils.c \
                     $(SRC_DIR)/foundation/argo_config.c \
                     $(SRC_DIR)/foundation/argo_daemon_client.c \
                     $(SRC_DIR)/foundation/argo_init.c \
                     $(SRC_DIR)/foundation/argo_metrics.c

# Daemon library sources (registry, lifecycle, HTTP server)
DAEMON_SOURCES = $(SRC_DIR)/daemon/argo_registry.c \
                 $(SRC_DIR)/daemon/argo_registry_messaging.c \
                 $(SRC_DIR)/daemon/argo_registry_persistence.c \
                 $(SRC_DIR)/daemon/argo_workflow_registry.c \
                 $(SRC_DIR)/daemon/argo_lifecycle.c \
                 $(SRC_DIR)/daemon/argo_lifecycle_monitoring.c \
                 $(SRC_DIR)/daemon/argo_shared_services.c \
                 $(SRC_DIR)/daemon/argo_merge.c \
                 $(SRC_DIR)/daemon/argo_http_server.c \
                 $(SRC_DIR)/daemon/argo_daemon.c \
                 $(SRC_DIR)/daemon/argo_daemon_api_routes.c \
                 $(SRC_DIR)/daemon/argo_daemon_workflow_api.c

# Core library sources (foundation + providers for backwards compatibility)
CORE_SOURCES = $(FOUNDATION_SOURCES)

# Provider implementation sources
PROVIDER_SOURCES = $(SRC_DIR)/providers/argo_ollama.c \
                   $(SRC_DIR)/providers/argo_claude_process.c \
                   $(SRC_DIR)/providers/argo_claude_memory.c \
                   $(SRC_DIR)/providers/argo_claude_code.c \
                   $(SRC_DIR)/providers/argo_claude_api.c \
                   $(SRC_DIR)/providers/argo_openai_api.c \
                   $(SRC_DIR)/providers/argo_gemini_api.c \
                   $(SRC_DIR)/providers/argo_grok_api.c \
                   $(SRC_DIR)/providers/argo_deepseek_api.c \
                   $(SRC_DIR)/providers/argo_openrouter.c \
                   $(SRC_DIR)/providers/argo_mock.c \
                   $(SRC_DIR)/providers/argo_api_common.c \
                   $(SRC_DIR)/providers/argo_api_provider_common.c

# All sources (for compatibility)
SOURCES = $(FOUNDATION_SOURCES) $(DAEMON_SOURCES) $(PROVIDER_SOURCES)

# Object files
FOUNDATION_OBJECTS = $(patsubst $(SRC_DIR)/%.c,$(BUILD_DIR)/%.o,$(FOUNDATION_SOURCES))
DAEMON_OBJECTS = $(patsubst $(SRC_DIR)/%.c,$(BUILD_DIR)/%.o,$(DAEMON_SOURCES))
PROVIDER_OBJECTS = $(patsubst $(SRC_DIR)/%.c,$(BUILD_DIR)/%.o,$(PROVIDER_SOURCES))
OBJECTS = $(FOUNDATION_OBJECTS) $(DAEMON_OBJECTS) $(PROVIDER_OBJECTS)

# Libraries
CORE_LIB = $(BUILD_DIR)/libargo_core.a
DAEMON_LIB = $(BUILD_DIR)/libargo_daemon.a

# Script sources
SCRIPT_SOURCES = $(SCRIPT_DIR)/utils/argo_monitor.c \
                 $(SCRIPT_DIR)/utils/argo_memory_inspect.c \
                 $(SCRIPT_DIR)/utils/argo_update_models.c \
                 $(SCRIPT_DIR)/utils/argo_ci_assign.c \
                 $(SCRIPT_DIR)/utils/argo_workflow_tracer.c

# Script executables (build into bin/utils/)
SCRIPT_TARGETS = $(patsubst $(SCRIPT_DIR)/utils/%.c,bin/utils/%,$(SCRIPT_SOURCES))

# Stub objects (empty - stubs removed)
STUB_OBJECTS =

# Binaries
DAEMON_BINARY = bin/argo-daemon
DAEMON_SOURCE = $(SRC_DIR)/daemon/argo_daemon_main.c

# Test targets (build into bin/tests/)
API_TEST_TARGET = bin/tests/test_api_providers
API_CALL_TARGET = bin/tests/test_api_calls
REGISTRY_TEST_TARGET = bin/tests/test_registry
MEMORY_TEST_TARGET = bin/tests/test_memory
LIFECYCLE_TEST_TARGET = bin/tests/test_lifecycle
PROVIDER_TEST_TARGET = bin/tests/test_providers
MESSAGING_TEST_TARGET = bin/tests/test_messaging
INTEGRATION_TEST_TARGET = bin/tests/test_integration
PERSISTENCE_TEST_TARGET = bin/tests/test_persistence
SESSION_TEST_TARGET = bin/tests/test_session
ENV_TEST_TARGET = bin/tests/test_env
CONFIG_TEST_TARGET = bin/tests/test_config
ISOLATED_ENV_TEST_TARGET = bin/tests/test_isolated_env
THREAD_SAFETY_TEST_TARGET = bin/tests/test_thread_safety
SHUTDOWN_SIGNALS_TEST_TARGET = bin/tests/test_shutdown_signals
CONCURRENT_WORKFLOWS_TEST_TARGET = bin/tests/test_concurrent_workflows
ENV_PRECEDENCE_TEST_TARGET = bin/tests/test_env_precedence
SHARED_SERVICES_TEST_TARGET = bin/tests/test_shared_services
WORKFLOW_REGISTRY_TEST_TARGET = bin/tests/test_workflow_registry
HTTP_TEST_TARGET = bin/tests/test_http
JSON_TEST_TARGET = bin/tests/test_json
API_COMMON_TEST_TARGET = bin/tests/test_api_common
CLAUDE_PROVIDERS_TEST_TARGET = bin/tests/test_claude_providers
MEMORY_STRESS_TEST_TARGET = bin/tests/test_memory_stress

# Stress Tests (build into bin/tests/)
CONCURRENCY_STRESS_TEST_TARGET = bin/tests/test_concurrency_stress
SOAK_TEST_TARGET = bin/tests/test_soak

# Test Harnesses (build into bin/tests/)
HARNESS_INIT_BASIC = bin/tests/harness_init_basic
HARNESS_ENV_INSPECT = bin/tests/harness_env_inspect
HARNESS_REINIT = bin/tests/harness_reinit
HARNESS_INIT_ERROR = bin/tests/harness_init_error
HARNESS_SOCKET = bin/tests/harness_socket
HARNESS_TERMINAL = bin/tests/harness_terminal
HARNESS_CI_INTERACTIVE = bin/tests/harness_ci_interactive
